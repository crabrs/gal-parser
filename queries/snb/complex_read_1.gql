MATCH p = ALL SHORTEST SIMPLE PATH (person:Person {id: $personId})-[:knows]-{1,3}(friend:Person {firstName: $firstName})
RETURN
    min(path_length(p)) AS distance,
    friend
ORDER BY
    distance ASC,
    friend.lastName ASC,
    CAST(friend.id AS INTEGER) ASC
LIMIT 20

NEXT

MATCH (friend)-[:isLocatedIn]->(friendCity:City)
OPTIONAL MATCH (friend)-[studyAt:studyAt]->(university:University)-[:isLocatedIn]->(universityCity:City)
RETURN
    friend,
    collect_list(
        CASE
            WHEN university IS NULL THEN null
            ELSE [university.name, studyAt.classYear, universityCity.name]
        END
    ) AS universities,
    friendCity,
    distance

NEXT

OPTIONAL MATCH (friend)-[workAt:workAt]->(company:Company)-[:isLocatedIn]->(companyCountry:Country)
RETURN
    friend.id AS friendId,
    friend.lastName AS friendLastName,
    distance AS distanceFromPerson,
    friend.birthday AS friendBirthday,
    friend.creationDate AS friendCreationDate,
    friend.gender AS friendGender,
    friend.browserUsed AS friendBrowserUsed,
    friend.locationIP AS friendLocationIP,
    friend.email AS friendEmails,
    firend.speaks AS friendSpeaks,
    friendCity.name AS friendCityName,
    universities AS friendUniversities,
    collect_list(
        CASE
            WHEN company IS NULL THEN null
            ELSE [company.name, workAt.workFrom, companyCountry.name]
        END
    ) AS friendCompanies
ORDER BY
    distanceFromPerson ASC,
    friendLastName ASC,
    CAST(friendId AS INTEGER) ASC
LIMIT 20;